;; -*- lexical-binding: t; -*-

;;; Code:

;; (use-package meow)

;; (setq meow-keypad-leader-dispatch asm:leader-map)

;; (defun reload-init-file()
;;     (interactive)
;;   (load-file "~/.config/emacs/init.el")
;; )

;; (defun load-config-file()
;;   (interactive)
;;   (find-file "~/.config/emacs/config.org")
;;)

;; register code blocks as meow things
;;(meow-thing-register 'org-region '(pair ("#+begin_src emacs-lisp") ("#+end_src")) '(pair ("#+begin_src emacs-lisp") ("#+end")))
;;(add-to-list 'meow-char-thing-table '(?o . org-region))

;; (defun meow-setup ()
;;   (setq meow-cheatsheet-layout meow-cheatsheet-layout-colemak-dh)
;;   (meow-motion-overwrite-define-key
;;   ;; Use e to move up, n to move down.
;;   ;; Since special modes usually use n to move down, we only overwrite e here.
;;   '("e" . meow-prev)
;;   '("<escape>" . ignore))

;;   (meow-leader-define-key
;;   '("?" . meow-cheatsheet)
;;   ;; To execute the originally e in MOTION state, use SPC e.
;;   '("C" . load-config-file)
;;   '("e" . "H-e")
;;   '("X" . eval-region)
;;   ;; '("." . find-file)
;;   '("R" . reload-init-file)
;;   '("1" . meow-digit-argument)
;;   '("2" . meow-digit-argument)
;;   '("3" . meow-digit-argument)
;;   '("4" . meow-digit-argument)
;;   '("5" . meow-digit-argument)
;;   '("6" . meow-digit-argument)
;;   '("7" . meow-digit-argument)
;;   '("8" . meow-digit-argument)
;;   '("9" . meow-digit-argument)
;;   '("0" . meow-digit-argument))

;;   (meow-normal-define-key
;;   '("0" . meow-expand-0)
;;   '("1" . meow-expand-1)
;;   '("2" . meow-expand-2)
;;   '("3" . meow-expand-3)
;;   '("4" . meow-expand-4)
;;   '("5" . meow-expand-5)
;;   '("6" . meow-expand-6)
;;   '("7" . meow-expand-7)
;;   '("8" . meow-expand-8)
;;   '("9" . meow-expand-9)
;;   '("-" . negative-argument)
;;   '(";" . meow-reverse)
;;   '("," . meow-inner-of-thing)
;;   '("." . meow-bounds-of-thing)

;;   '("[" . meow-beginning-of-thing)
;;   '("]" . meow-end-of-thing)
;;   '("/" . meow-visit)
;;   '("a" . meow-append)
;;   '("A" . meow-open-below)
;;   '("b" . meow-back-word)
;;   '("B" . meow-back-symbol)
;;   '("c" . meow-change)
;;   '("d" . meow-delete)
;;   '("e" . meow-prev)
;;   '("E" . meow-prev-expand)
;;   '("f" . meow-find)
;;   '("g" . meow-cancel-selection)
;;   '("G" . meow-grab)
;;   '("m" . meow-left)
;;   '("M" . meow-left-expand)
;;   '("i" . meow-right)
;;   '("I" . meow-right-expand)
;;   '("j" . meow-join)
;;   '("k" . meow-kill)
;;   '("l" . meow-line)
;;   '("L" . meow-goto-line)
;;   '("h" . meow-mark-word)
;;   '("H" . meow-mark-symbol)
;;   '("n" . meow-next)
;;   '("N" . meow-next-expand)
;;   '("o" . meow-block)
;;   '("O" . meow-to-block)
;;   '("p" . meow-yank)
;;   '("q" . meow-quit)
;;   '("r" . meow-replace)
;;   '("s" . meow-insert)
;;   '("S" . meow-open-above)
;;   '("t" . meow-till)
;;   '("u" . meow-undo)
;;   '("U" . meow-undo-in-selection)
;;   '("v" . meow-search)
;;   '("w" . meow-next-word)
;;   '("W" . meow-next-symbol)
;;   '("x" . meow-delete)
;;   '("X" . meow-backward-delete)
;;   '("y" . meow-save)
;;   '("z" . meow-pop-selection)
;;   '("'" . repeat)
;;   '("<escape>" . ignore)))


;;   (require 'meow)
;;   (meow-setup)
;;   (meow-global-mode 1)
;;   (setq meow-use-clipboard t)
